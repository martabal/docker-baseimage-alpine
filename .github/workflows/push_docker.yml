name: Release

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: "Create release"
        required: false
        default: true
        type: boolean
      tags:
        description: "tag"
        required: false
        type: string
  schedule:
    - cron: "0 0 1 * *"

permissions:
  contents: write
  actions: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get latest tag
        id: latesttag
        run: |
          latestTag=$(curl -sL https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/latest | jq -r '.tag_name');
          echo "latest_tag=$latestTag" >> $GITHUB_ENV

      - name: Release tag
        id: releasetag
        run: |
          latestTag=${{ env.latest_tag }}
          currentMonth=$(date "+%-m")
          if [[ $latestTag =~ ([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
              latestMonth=${BASH_REMATCH[2]}
              releaseNumber=${BASH_REMATCH[3]}
              echo $latestMonth
              echo $releaseNumber
              if [[ $currentMonth == $latestMonth ]]; then
                  releaseNumber=$((releaseNumber + 1))
              else
                  releaseNumber=0
              fi
          else
              releaseNumber=0
          fi
          releaseTag=$(date "+%Y.$currentMonth").$releaseNumber
          if [[ -n "${{ github.event.inputs.tags }}" ]]; then
              releaseTag="${{ github.event.inputs.tags }}"
          fi
          echo $releaseTag
          echo "release_tag=$releaseTag" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/alpine
            ghcr.io/${{ github.repository_owner }}/alpine
          tags: |
            type=raw,value=latest,enable=true
            type=sha
            type=raw,value=${{ steps.releasetag.outputs.release_tag }},enable=true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.4.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set Git tag
        if: ${{ ( github.event.inputs.create_release == 'true' || github.event_name == 'schedule')  && success() }}
        run: |
          git tag v${{ steps.releasetag.outputs.release_tag }}
          git push origin v${{ steps.releasetag.outputs.release_tag }}

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.releasetag.outputs.release_tag }} \
            --generate-notes
